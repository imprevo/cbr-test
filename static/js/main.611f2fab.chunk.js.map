{"version":3,"sources":["ui/Json.module.css","ui/Modal.module.css","ui/Tag.module.css","features/element-three/ElementItem.module.css","features/element-json/ElementItem.module.css","ui/Button.module.css","ui/Input.module.css","ui/FormRow.module.css","ui/InputGroup.module.css","ui/ButtonIcon.module.css","features/element-three/ElementList.module.css","features/element-core/utils.ts","features/element-core/reducer.ts","features/element-core/mock-data.ts","features/element-core/ElementContext.tsx","ui/Button.tsx","ui/Modal.tsx","ui/Input.tsx","ui/FormRow.tsx","ui/InputGroup.tsx","features/element-form/NameFormControl.tsx","features/element-form/AddElementForm.tsx","features/element-form/AddElementModal.tsx","ui/ButtonIcon.tsx","ui/Tag.tsx","features/element-form/AddChildElementModal.tsx","features/element-form/AttributeFormControl.tsx","features/element-form/ValueFormControl.tsx","features/element-form/AddAttributeForm.tsx","features/element-form/AddAttributeModal.tsx","features/element-form/EditElementForm.tsx","features/element-form/EditElementModal.tsx","features/element-three/ElementItem.tsx","features/element-three/ElementList.tsx","features/element-three/ElementListThree.tsx","ui/Json.tsx","features/element-json/ElementItem.tsx","features/element-json/ElementList.tsx","features/element-json/ElementListJson.tsx","features/element-view-switcher/ElementSwitcher.tsx","index.tsx","components/App.tsx"],"names":["module","exports","isOneOfList","key","list","some","id","omitChildById","obj","allRemovedIds","concat","findAllChildIds","data","element","children","length","childrenOfChildren","map","Object","values","reduce","acc","filter","childId","elementReducer","state","action","type","payload","parentId","root","elementId","attributes","attribute","attributeId","elementsData","el1","name","value","el2","el3","el4","el5","StateContext","React","useElementState","useElementById","useElementActions","dispatch","add","nanoid","edit","remove","ElementProvider","Provider","Button","onClick","className","styles","button","Modal","show","title","onClose","ReactDOM","createPortal","modal","shadow","dialog","close","document","body","Input","placeholder","onChange","required","pattern","autoFocus","input","FormRow","label","cx","cn","bind","InputGroup","align","NameFormControl","e","target","AddElementForm","setName","onSubmit","preventDefault","trimmedName","trim","AddElementModal","setShow","open","ButtonIcon","Tag","closed","selfClosed","tag","Attribute","AddChildElementModal","AttributeFormControl","onDelete","ValueFormControl","AddAttributeForm","setValue","stopPropagation","trimmedValue","AddAttributeModal","EditElementForm","setAttributes","onAttributeValueChange","onAttributeDelete","index","EditElementModal","ElementItem","onRemove","setOpen","onToggle","showOpen","buttons","ElementList","ElementListItem","ElementListThree","JsonBlock","block","comma","JsonBlockPadded","padded","JsonKey","JsonString","string","JsonArray","JsonObject","ElementListJson","ElementViewSwitcher","view","setView","toggleView","render","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,OAAS,qBAAqB,OAAS,qBAAqB,MAAQ,sB,gBCAlHD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,OAAS,sBAAsB,MAAQ,qBAAqB,MAAQ,uB,mBCAlJD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,uBAAuB,MAAQ,qB,gBCApFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,QAAU,6BAA6B,OAAS,8B,gBCAzGD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,QAAU,6BAA6B,OAAS,8B,kBCAzGD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,MAAQ,yB,iBCA1BD,EAAOC,QAAU,CAAC,cAAc,gCAAgC,eAAe,iCAAiC,gBAAgB,oC,gBCAhID,EAAOC,QAAU,CAAC,OAAS,6B,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,4B,0YCClB,SAASC,EAAYC,EAAUC,GACpC,OAAOA,EAAKC,MAAK,SAAAC,GAAE,OAAIA,IAAOH,KAqBzB,SAASI,EAAcC,EAAqBL,GACjD,IAAKK,EAAIL,GACP,OAAOK,EAGT,IAAMC,EAAgB,CAACN,GAAKO,OAvBvB,SAASC,EAAgBC,EAAsBN,GACpD,IAAMO,EAAUD,EAAKN,GAErB,IAAKO,EACH,MAAO,GAJ6D,IAO9DC,EAAaD,EAAbC,SAER,IAAKA,EAASC,OACZ,OAAOD,EAGT,IAAME,EAAqBF,EAASG,KAAI,SAAAX,GAAE,OAAIK,EAAgBC,EAAMN,MAEpE,OAAOQ,EAASJ,OAAT,MAAAI,EAAQ,YAAWE,IAQSL,CAAgBH,EAAKL,IAExD,OAAOe,OAAOC,OAAOX,GAAKY,QAAuB,SAACC,EAAKR,GASrD,OARKX,EAAYW,EAAQP,GAAIG,KAC3BY,EAAIR,EAAQP,I,yVAAZ,IACKO,EADL,CAEEC,SAAUD,EAAQC,SAASQ,QACzB,SAAAC,GAAO,OAAKrB,EAAYqB,EAASd,SAIhCY,IACN,I,yjBCDE,SAASG,EAAeC,EAAcC,GAC3C,OAAQA,EAAOC,MACb,IAAK,cAIA,IAAD,EAHF,OAC8B,OAA5BD,EAAOE,QAAQC,UACfH,EAAOE,QAAQC,YAAYJ,EAAMb,KAE1B,KACFa,EADL,CAEEb,KAAK,KACAa,EAAMb,MADP,mBAEDc,EAAOE,QAAQC,SAFd,KAGGJ,EAAMb,KAAKc,EAAOE,QAAQC,UAH7B,CAIAf,SAAS,GAAD,mBACHW,EAAMb,KAAKc,EAAOE,QAAQC,UAAUf,UADjC,CAENY,EAAOE,QAAQf,QAAQP,QANzB,cASDoB,EAAOE,QAAQf,QAAQP,GAAKoB,EAAOE,QAAQf,SAT1C,MAaD,KACFY,EADL,CAEEb,KAAK,KACAa,EAAMb,KADP,eAEDc,EAAOE,QAAQf,QAAQP,GAAKoB,EAAOE,QAAQf,UAE9CiB,KAAML,EAAMK,KAAKpB,OAAOgB,EAAOE,QAAQf,QAAQP,MAGnD,IAAK,eACH,OAAO,KACFmB,EADL,CAEEb,KAAK,KACAa,EAAMb,KADP,eAEDc,EAAOE,QAAQtB,GAFd,KAGGmB,EAAMb,KAAKc,EAAOE,QAAQtB,IAH7B,GAIGoB,EAAOE,aAKlB,IAAK,iBACH,OAAO,KACFH,EADL,CAEEb,KAAML,EAAckB,EAAMb,KAAMc,EAAOE,SACvCE,KAAML,EAAMK,KAAKR,QAAO,SAAAhB,GAAE,OAAIA,IAAOoB,EAAOE,aAGhD,IAAK,gBACH,OAAO,KACFH,EADL,CAEEb,KAAK,KACAa,EAAMb,KADP,eAEDc,EAAOE,QAAQG,UAFd,KAGGN,EAAMb,KAAKc,EAAOE,QAAQG,WAH7B,CAIAC,WAAW,GAAD,mBACLP,EAAMb,KAAKc,EAAOE,QAAQG,WAAWC,YADhC,CAERN,EAAOE,QAAQK,kBAMzB,IAAK,iBACH,OAAO,KACFR,EADL,CAEEb,KAAK,KACAa,EAAMb,KADP,eAEDc,EAAOE,QAAQG,UAFd,KAGGN,EAAMb,KAAKc,EAAOE,QAAQG,WAH7B,CAIAC,WAAYP,EAAMb,KAAKc,EAAOE,QAAQG,WAAWC,WAAWf,KAC1D,SAAAgB,GACE,OAAIA,EAAU3B,KAAOoB,EAAOE,QAAQK,UAAU3B,GACrCoB,EAAOE,QAAQK,UAEjBA,WAOnB,IAAK,mBACH,OAAO,KACFR,EADL,CAEEb,KAAK,KACAa,EAAMb,KADP,eAEDc,EAAOE,QAAQG,UAFd,KAGGN,EAAMb,KAAKc,EAAOE,QAAQG,WAH7B,CAIAC,WAAYP,EAAMb,KAAKc,EAAOE,QAAQG,WAAWC,WAAWV,QAC1D,qBAAGhB,KAAgBoB,EAAOE,QAAQM,qBAM5C,QACE,OAAOT,GCzIN,IAAMU,EAA6B,CACxCvB,KAAM,CACJwB,IAAK,CACH9B,GAAI,MACJ+B,KAAM,MACNL,WAAY,CACV,CAAE1B,GAAI,QAAS+B,KAAM,QAASC,MAAO,UACrC,CAAEhC,GAAI,QAAS+B,KAAM,QAASC,MAAO,WAEvCxB,SAAU,CAAC,QAEbyB,IAAK,CACHjC,GAAI,MACJ+B,KAAM,MACNL,WAAY,GACZlB,SAAU,IAEZ0B,IAAK,CACHlC,GAAI,MACJ+B,KAAM,MACNL,WAAY,GACZlB,SAAU,CAAC,QAEb2B,IAAK,CACHnC,GAAI,MACJ+B,KAAM,MACNL,WAAY,GACZlB,SAAU,CAAC,QAEb4B,IAAK,CACHpC,GAAI,MACJ+B,KAAM,MACNL,WAAY,CAAC,CAAE1B,GAAI,QAAS+B,KAAM,QAASC,MAAO,WAClDxB,SAAU,KAGdgB,KAAM,CAAC,MAAO,QC9BVa,EAAeC,gBAA0D,CAC7ET,EACA,eAGWU,EAAkB,kBAAMD,aAAiBD,GAAc,IAEvDG,EAAiB,SAACxC,GAE7B,OADiBuC,IAATjC,KACIN,IAGDyC,EAAoB,WAAO,IAAD,EAChBH,aAAiBD,GAA7BK,EAD4B,oBA8BrC,MAAO,CAAEC,IA3BGL,eACV,SAAChB,GAAD,OACEoB,EAAS,CACPrB,KAAM,cACNC,QAAS,CACPC,SAAUD,EAAQC,SAClBhB,QAAS,CACPP,GAAI4C,MACJb,KAAMT,EAAQS,KACdL,WAAY,GACZlB,SAAU,SAIlB,CAACkC,IAaWG,KAVDP,eACX,SAAChB,GAAD,OAAuBoB,EAAS,CAAErB,KAAM,eAAgBC,cACxD,CAACoB,IAQiBI,OALLR,eACb,SAAChB,GAAD,OAAkBoB,EAAS,CAAErB,KAAM,iBAAkBC,cACrD,CAACoB,MAqBQK,EAA4B,SAAC,GAAkB,IAAhBvC,EAAe,EAAfA,SAC1C,OACE,gBAAC6B,EAAaW,SAAd,CAAuBhB,MAhEKM,aAAiBpB,EAAgBW,IAiE1DrB,I,iBC/DMyC,EAA0B,SAAC,GAIjC,IAHLzC,EAGI,EAHJA,SAGI,IAFJa,YAEI,MAFG,SAEH,EADJ6B,EACI,EADJA,QAEA,OACE,0BAAQC,UAAWC,IAAOC,OAAQhC,KAAMA,EAAM6B,QAASA,GACpD1C,I,gBCLM8C,EAAyB,SAAC,GAAwC,IAAtC9C,EAAqC,EAArCA,SAAU+C,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC9D,OAAKF,EAIEG,IAASC,aACd,uBAAKR,UAAWC,IAAOQ,OACrB,uBAAKT,UAAWC,IAAOS,SACvB,uBAAKV,UAAWC,IAAOU,QACrB,sBAAIX,UAAWC,IAAOI,OAAQA,GAC9B,0BAAQL,UAAWC,IAAOW,MAAO1C,KAAK,SAAS6B,QAASO,IACvDjD,IAGLwD,SAASC,MAZF,M,iBCCEC,EAAyB,SAAC,GAQhC,IAPLnC,EAOI,EAPJA,KACAoC,EAMI,EANJA,YACAnC,EAKI,EALJA,MACAoC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,UAEA,OACE,yBACEpB,UAAWC,IAAOoB,MAClBzC,KAAMA,EACNoC,YAAaA,EACb9C,KAAK,OACLW,MAAOA,EACPoC,SAAUA,EACVC,SAAUA,EACVC,QAASA,EACTC,UAAWA,K,iBCzBJE,EAA2B,SAAC,GAAyB,IAAvBjE,EAAsB,EAAtBA,SAAUkE,EAAY,EAAZA,MACnD,OACE,yBAAOvB,UAAWC,IAAOsB,OACtBA,EACAlE,I,kCCPDmE,EAAKC,IAAGC,KAAKzB,KAMN0B,EAA8B,SAAC,GAGrC,IAFLtE,EAEI,EAFJA,SAEI,IADJuE,aACI,MADI,UACJ,EACJ,OAAO,uBAAK5B,UAAWwB,EAAG,cAAD,gBAAyBI,KAAWvE,ICHlDwE,EAAmC,SAAC,GAI1C,IAHLZ,EAGI,EAHJA,SACApC,EAEI,EAFJA,MACAuC,EACI,EADJA,UAEA,OACE,gBAAC,EAAD,CAASG,MAAM,SACb,gBAAC,EAAD,KACE,gBAAC,EAAD,CACE3C,KAAK,OACLoC,YAAY,aACZnC,MAAOA,EACPoC,SAAU,SAAAa,GAAC,OAAIb,EAASa,EAAEC,OAAOlD,QACjCqC,UAAQ,EACRC,QAAQ,uBACRC,UAAWA,OCfRY,EAAkC,SAAC,GAAqB,IAAnBnF,EAAkB,EAAlBA,GAAIyD,EAAc,EAAdA,QAC5Cd,EAAQF,IAARE,IAD0D,EAE1CL,WAAe,IAF2B,mBAE3DP,EAF2D,KAErDqD,EAFqD,KAWlE,OACE,wBAAMC,SATS,SAACJ,GAChBA,EAAEK,iBACF,IAAMC,EAAcxD,EAAKyD,OACrBD,IACF5C,EAAI,CAAEpB,SAAUvB,GAAM,KAAM+B,KAAMwD,IAClC9B,OAKA,gBAAC,EAAD,CAAiBW,SAAUgB,EAASpD,MAAOD,EAAMwC,WAAS,IAC1D,gBAAC,EAAD,CAAQlD,KAAK,UAAb,YCpBOoE,EAA4B,WAAO,IAAD,EACrBnD,YAAe,GADM,mBACtCiB,EADsC,KAChCmC,EADgC,KAEvC3B,EAAQzB,eAAkB,kBAAMoD,GAAQ,KAAQ,IAChDC,EAAOrD,eAAkB,kBAAMoD,GAAQ,KAAO,IAEpD,OACE,gCACE,gBAAC,EAAD,CAAQxC,QAASyC,GAAjB,kBACA,gBAAC,EAAD,CAAOpC,KAAMA,EAAMC,MAAM,iBAAiBC,QAASM,GACjD,gBAAC,EAAD,CAAgBN,QAASM,O,iBCLpB6B,EAA8B,SAAC,GAIrC,IAHL7D,EAGI,EAHJA,KAGI,IAFJV,YAEI,MAFG,SAEH,EADJ6B,EACI,EADJA,QAEA,OACE,0BAAQC,UAAWC,IAAOC,OAAQhC,KAAMA,EAAM6B,QAASA,GACrD,qBAAGC,UAAS,gBAAWpB,O,gBCRhB8D,EAA0B,SAAC,GAAD,IAAGrF,EAAH,EAAGA,SAAUsF,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,WAArB,OACrC,wBAAM5C,UAAWC,IAAO4C,KACrB,IACAF,GAAU,IACVtF,EACAuF,GAAc,KACd,MASQE,EAAsC,SAAC,GAAD,IAAGlE,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACjD,wBAAMmB,UAAWC,IAAOzB,WACrB,IACAI,EAFH,KAEU,wBAAMoB,UAAWC,IAAOpB,OAAQA,GAF1C,MCbWkE,EAAwC,SAAC,GAAkB,IAAhBlG,EAAe,EAAfA,GAAI+B,EAAW,EAAXA,KAAW,EAC7CO,YAAe,GAD8B,mBAC9DiB,EAD8D,KACxDmC,EADwD,KAE/D3B,EAAQzB,eAAkB,kBAAMoD,GAAQ,KAAQ,IAChDC,EAAOrD,eAAkB,kBAAMoD,GAAQ,KAAO,IAEpD,OACE,gCACE,gBAAC,EAAD,CAAY3D,KAAK,OAAOmB,QAASyC,IACjC,gBAAC,EAAD,CACEpC,KAAMA,EACNC,MAAK,mCAA8BzB,GACnC0B,QAASM,GAET,gBAAC,EAAD,CAAgB/D,GAAIA,EAAIyD,QAASM,OCX5BoC,EAAwC,SAAC,GAK/C,IAJL/B,EAII,EAJJA,SACAgC,EAGI,EAHJA,SACApE,EAEI,EAFJA,MACAD,EACI,EADJA,KAEA,OACE,gBAAC,EAAD,CAAS2C,MAAK,oBAAe3C,EAAf,MACZ,gBAAC,EAAD,KACE,gBAAC,EAAD,CACEA,KAAI,oBAAeA,GACnBoC,YAAY,wBACZnC,MAAOA,EACPoC,SAAU,SAAAa,GAAC,OAAIb,EAASrC,EAAMkD,EAAEC,OAAOlD,QACvCqC,UAAQ,EACRC,QAAQ,iBAEV,gBAAC,EAAD,CAAQpB,QAAS,kBAAMkD,EAASrE,KAAhC,aCnBKsE,GAAoC,SAAC,GAI3C,IAHLjC,EAGI,EAHJA,SACApC,EAEI,EAFJA,MACAuC,EACI,EADJA,UAEA,OACE,gBAAC,EAAD,CAASG,MAAM,UACb,gBAAC,EAAD,KACE,gBAAC,EAAD,CACE3C,KAAK,QACLoC,YAAY,cACZnC,MAAOA,EACPoC,SAAU,SAAAa,GAAC,OAAIb,EAASa,EAAEC,OAAOlD,QACjCqC,UAAQ,EACRC,QAAQ,eACRC,UAAWA,OCZR+B,GAAoC,SAAC,GAI3C,IAHL5E,EAGI,EAHJA,WACA2D,EAEI,EAFJA,SACA5B,EACI,EADJA,QACI,EACoBnB,WAAe,IADnC,mBACGP,EADH,KACSqD,EADT,OAEsB9C,WAAe,IAFrC,mBAEGN,EAFH,KAEUuE,EAFV,KAmBJ,OACE,wBAAMlB,SAhBa,SAACJ,GACpBA,EAAEK,iBACFL,EAAEuB,kBACF,IAAMjB,EAAcxD,EAAKyD,OACnBiB,EAAezE,EAAMwD,OAGzBD,GACAkB,IACC/E,EAAW3B,MAAK,SAAA4B,GAAS,OAAIA,EAAUI,OAASA,OAEjDsD,EAAS,CAAErF,GAAI4C,MAAUb,OAAMC,UAC/ByB,OAKA,gBAAC,EAAD,CAAiBzB,MAAOD,EAAMqC,SAAUgB,EAASb,WAAS,IAC1D,gBAAC,GAAD,CAAkBvC,MAAOA,EAAOoC,SAAUmC,IAC1C,gBAAC,EAAD,CAAYxB,MAAM,WAChB,gBAAC,EAAD,CAAQ1D,KAAK,UAAb,OACA,gBAAC,EAAD,CAAQ6B,QAASO,GAAjB,aC/BKiD,GAAqC,SAAC,GAI5C,IAHL3E,EAGI,EAHJA,KACAL,EAEI,EAFJA,WACA2D,EACI,EADJA,SACI,EACoB/C,YAAe,GADnC,mBACGiB,EADH,KACSmC,EADT,KAEE3B,EAAQzB,eAAkB,kBAAMoD,GAAQ,KAAQ,IAChDC,EAAOrD,eAAkB,kBAAMoD,GAAQ,KAAO,IAEpD,OACE,gCACE,gBAAC,EAAD,CAAQxC,QAASyC,GAAjB,iBACA,gBAAC,EAAD,CAAOpC,KAAMA,EAAMC,MAAK,0BAAqBzB,GAAQ0B,QAASM,GAC5D,gBAAC,GAAD,CACErC,WAAYA,EACZ2D,SAAUA,EACV5B,QAASM,O,6jBCXZ,IAAM4C,GAAmC,SAAC,GAAqB,IAAnB3G,EAAkB,EAAlBA,GAAIyD,EAAc,EAAdA,QAC/ClD,EAAUiC,EAAexC,GACvB6C,EAASJ,IAATI,KAF2D,EAG3CP,WAAe/B,EAAQwB,MAHoB,mBAG5DA,EAH4D,KAGtDqD,EAHsD,OAI/B9C,WAAe/B,EAAQmB,YAJQ,mBAI5DA,EAJ4D,KAIhDkF,EAJgD,KAM7DC,EAAyB,SAAC9E,EAAcC,GAC5C4E,EACElF,EAAWf,KAAI,SAAAgB,GAAS,OACtBI,IAASJ,EAAUI,KAAnB,MAA+BJ,EAA/B,CAA0CK,MAAOA,IAAUL,OAO3DmF,EAAoB,SAAC/E,GACzB6E,EAAclF,EAAWV,QAAO,SAAAW,GAAS,OAAII,IAASJ,EAAUI,UAYlE,OACE,wBAAMsD,SAXS,SAACJ,GAChBA,EAAEK,iBACFL,EAAEuB,kBAEF,IAAMjB,EAAcxD,EAAKyD,OACrBD,IACF1C,EAAK,MAAKtC,EAAN,CAAemB,aAAYK,KAAMwD,KACrC9B,OAKA,gBAAC,EAAD,CAAiBW,SAAUgB,EAASpD,MAAOD,EAAMwC,WAAS,IACzD7C,EAAWf,KAAI,SAACgB,EAAWoF,GAAZ,OACd,gBAAC,EAAD,CACElH,IAAKkH,EACLhF,KAAMJ,EAAUI,KAChBC,MAAOL,EAAUK,MACjBoC,SAAUyC,EACVT,SAAUU,OAGd,gBAAC,EAAD,CAAY/B,MAAM,UAChB,gBAAC,GAAD,CACErD,WAAYA,EACZK,KAAMA,EACNsD,SAhCe,SAAC1D,GACtBiF,EAAclF,EAAWtB,OAAOuB,QAkC9B,gBAAC,EAAD,CAAQN,KAAK,UAAb,UCtDO2F,GAAoC,SAAC,GAAkB,IAAhBhH,EAAe,EAAfA,GAAI+B,EAAW,EAAXA,KAAW,EACzCO,YAAe,GAD0B,mBAC1DiB,EAD0D,KACpDmC,EADoD,KAE3D3B,EAAQzB,eAAkB,kBAAMoD,GAAQ,KAAQ,IAChDC,EAAOrD,eAAkB,kBAAMoD,GAAQ,KAAO,IAEpD,OACE,gCACE,gBAAC,EAAD,CAAY3D,KAAK,MAAMmB,QAASyC,IAChC,gBAAC,EAAD,CAAOpC,KAAMA,EAAMC,MAAK,yBAAoBzB,GAAQ0B,QAASM,GAC3D,gBAAC,GAAD,CAAiB/D,GAAIA,EAAIyD,QAASM,O,mBCP7BkD,GAA+B,SAAC,GAAkC,IAAhCzG,EAA+B,EAA/BA,SAAUF,EAAqB,EAArBA,KAAM4G,EAAe,EAAfA,SAAe,EACpD5E,YAAe,GADqC,mBACrEqD,EADqE,KAC/DwB,EAD+D,KAEtEC,EAAW9E,eAAkB,kBAAM6E,GAASxB,KAAO,CAACA,EAAMwB,IAExDnH,EAAyBM,EAAzBN,GAAI+B,EAAqBzB,EAArByB,KAAML,EAAepB,EAAfoB,WACZ2F,EAAW1B,GAAQnF,EAEzB,OACE,wBAAM2C,UAAWC,KAAO7C,SACtB,wBAAM4C,UAAWC,KAAO8B,QACrB1E,GACC,gBAAC,EAAD,CACEuB,KAAM4D,EAAO,aAAe,cAC5BzC,QAASkE,IAGb,gBAAC,EAAD,CAAKrB,YAAasB,GACftF,EACAL,EAAWf,KAAI,gBAAGX,EAAH,EAAGA,GAAI+B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACd,gBAAC,EAAD,CAAWnC,IAAKG,EAAI+B,KAAMA,EAAMC,MAAOA,QAG3C,wBAAMmB,UAAWC,KAAOkE,SACtB,gBAAC,EAAD,CAAsBtH,GAAIA,EAAI+B,KAAMA,IACpC,gBAAC,GAAD,CAAkB/B,GAAIA,EAAI+B,KAAMA,IAChC,gBAAC,EAAD,CAAYA,KAAK,QAAQmB,QAASgE,MAGrCG,GACC,gCACG7G,EACD,gBAAC,EAAD,CAAKsF,QAAM,GAAE/D,M,oBC/BVwF,GAA0C,SAAC,GAAc,IAAZzH,EAAW,EAAXA,KACxD,OACE,sBAAIqD,UAAWC,KAAOtD,MACnBA,EAAKa,KAAI,SAAAX,GAAE,OACV,sBAAIH,IAAKG,GACP,gBAAC,GAAD,CAAiBA,GAAIA,UAWlBwH,GAAkD,SAAC,GAAY,IAAVxH,EAAS,EAATA,GAC1DO,EAAUiC,EAAexC,GACvB8C,EAAWL,IAAXK,OACFoE,EAAW5E,eAAkB,kBAAMQ,EAAO9C,KAAK,CAAC8C,EAAQ9C,IAE9D,OACE,gBAAC,GAAD,CAAaM,KAAMC,EAAS2G,SAAUA,GACnC3G,EAAQC,SAASC,OAAS,GAAK,gBAAC,GAAD,CAAaX,KAAMS,EAAQC,aChCpDiH,GAA6B,WAAO,IACvCjG,EAASe,IAATf,KAER,OAAO,gBAAC,GAAD,CAAa1B,KAAM0B,K,2DCHfkG,GAAkD,SAAC,GAAD,IAC7DlH,EAD6D,EAC7DA,SACAuB,EAF6D,EAE7DA,KAF6D,OAI7D,wBAAMoB,UAAWyB,KAAGxB,KAAOuE,MAAOvE,KAAOwE,QACtC7F,GAAQ,gBAAC,GAAD,KAAUA,GAClBvB,IAIQqH,GAA4B,SAAC,GAAD,IAAGrH,EAAH,EAAGA,SAAH,OACvC,wBAAM2C,UAAWyB,KAAGxB,KAAOuE,MAAOvE,KAAO0E,SAAUtH,IAGxCuH,GAAoB,SAAC,GAAD,IAAGvH,EAAH,EAAGA,SAAH,OAAkB,gCAAQA,EAAR,QAEtCwH,GAAuB,SAAC,GAAD,IAAGxH,EAAH,EAAGA,SAAH,OAClC,wBAAM2C,UAAWC,KAAO6E,QAAxB,IAAkCzH,EAAlC,MAGW0H,GAAsB,SAAC,GAAD,IAAG1H,EAAH,EAAGA,SAAH,OACjC,wBAAM2C,UAAWC,KAAOwE,OACtB,iCACCpH,GAAY,gBAAC,GAAD,KAAkBA,GAC/B,mCAIS2H,GAAuB,SAAC,GAAD,IAAG3H,EAAH,EAAGA,SAAH,OAClC,wBAAM2C,UAAWC,KAAOwE,OACtB,4BAAO,KACNpH,GAAY,gBAAC,GAAD,KAAkBA,GAC/B,4BAAO,OCjBEyG,GAA+B,SAAC,GAAkC,IAAhCzG,EAA+B,EAA/BA,SAAUF,EAAqB,EAArBA,KAAM4G,EAAe,EAAfA,SACrDlH,EAAyBM,EAAzBN,GAAI+B,EAAqBzB,EAArByB,KAAML,EAAepB,EAAfoB,WAElB,OACE,gBAAC,GAAD,KACE,wBAAMyB,UAAWC,KAAO7C,SACtB,gBAAC,GAAD,KACE,wBAAM4C,UAAWC,KAAO8B,QACtB,gBAAC,GAAD,WACA,gBAAC,GAAD,KAAalF,GAFf,IAGE,wBAAMmD,UAAWC,KAAOkE,SACtB,gBAAC,EAAD,CAAsBtH,GAAIA,EAAI+B,KAAMA,IACpC,gBAAC,GAAD,CAAkB/B,GAAIA,EAAI+B,KAAMA,IAChC,gBAAC,EAAD,CAAYA,KAAK,QAAQmB,QAASgE,KAEpC,gBAAC,GAAD,CAAWnF,KAAK,QACd,gBAAC,GAAD,KAAaA,IAEf,gBAAC,GAAD,CAAWA,KAAK,cACd,gBAAC,GAAD,KACGL,EAAWjB,OAAS,GACnBiB,EAAWf,KAAI,gBAAGX,EAAH,EAAGA,GAAI+B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACb,gBAAC,GAAD,CAAWnC,IAAKG,GACd,gBAAC,GAAD,KACE,gBAAC,GAAD,CAAW+B,KAAK,MACd,gBAAC,GAAD,KAAa/B,IAEf,gBAAC,GAAD,CAAW+B,KAAK,QACd,gBAAC,GAAD,KAAaA,IAEf,gBAAC,GAAD,CAAWA,KAAK,SACd,gBAAC,GAAD,KAAaC,UAb3B,MAsBF,gBAAC,GAAD,CAAWD,KAAK,YACd,gBAAC,GAAD,KAAYvB,QChDX+G,GAA0C,SAAC,GAAc,IAAZzH,EAAW,EAAXA,KACxD,OACE,gCACGA,EAAKa,KAAI,SAAAX,GAAE,OACV,gBAAC,GAAD,CAAiBH,IAAKG,EAAIA,GAAIA,SAUzBwH,GAAkD,SAAC,GAAY,IAAVxH,EAAS,EAATA,GAC1DO,EAAUiC,EAAexC,GACvB8C,EAAWL,IAAXK,OACFoE,EAAW5E,eAAkB,kBAAMQ,EAAO9C,KAAK,CAAC8C,EAAQ9C,IAE9D,OACE,gBAAC,GAAD,CAAaM,KAAMC,EAAS2G,SAAUA,GACnC3G,EAAQC,SAASC,OAAS,GAAK,gBAAC,GAAD,CAAaX,KAAMS,EAAQC,aC5BpD4H,GAA4B,WAAO,IACtC5G,EAASe,IAATf,KAER,OACE,gBAAC,GAAD,KACE,gBAAC,GAAD,KAAYA,EAAKf,OAAS,GAAK,gBAAC,GAAD,CAAaX,KAAM0B,OCL3C6G,GAAgC,WAAO,IAAD,EACzB/F,YAAe,GADU,mBAC1CgG,EAD0C,KACpCC,EADoC,KAE3CC,EAAalG,eAAkB,kBAAMiG,GAASD,KAAO,CAACA,EAAMC,IAClE,OACE,gCACE,gBAAC,EAAD,CAAQrF,QAASsF,GAAjB,eACCF,EAAO,gBAAC,GAAD,MAAuB,gBAAC,GAAD,QCNrC5E,IAAS+E,OAAO,mBCAa,kBAC3B,gBAAC,EAAD,KACE,gBAAC,EAAD,MACA,gBAAC,GAAD,SDHY,MAASzE,SAAS0E,eAAe,W","file":"static/js/main.611f2fab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Json_block__1t_ki\",\"string\":\"Json_string__GWkI1\",\"padded\":\"Json_padded__21ccz\",\"comma\":\"Json_comma__14CuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1m6Sa\",\"dialog\":\"Modal_dialog__e99aH\",\"shadow\":\"Modal_shadow__21AX9\",\"title\":\"Modal_title__aGaE5\",\"close\":\"Modal_close__a6eWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"Tag_tag__2AMXh\",\"attribute\":\"Tag_attribute__1mh_9\",\"value\":\"Tag_value__3tvK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"ElementItem_element__xYlrN\",\"buttons\":\"ElementItem_buttons__29J9l\",\"target\":\"ElementItem_target__23C4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"ElementItem_element___2iMf\",\"buttons\":\"ElementItem_buttons__zWHEE\",\"target\":\"ElementItem_target__32H2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1f97C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2Gfro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FormRow_label__1Tef7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-group\":\"InputGroup_input-group__3ERfY\",\"align-center\":\"InputGroup_align-center__3FyKp\",\"align-between\":\"InputGroup_align-between__3KGfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonIcon_button__15hlT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ElementList_list__2-Rsw\"};","import { TId, TIdList, TElementRecord } from './types';\n\nexport function isOneOfList(key: TId, list: TIdList): boolean {\n  return list.some(id => id === key);\n}\n\nexport function findAllChildIds(data: TElementRecord, id: TId): TIdList {\n  const element = data[id];\n\n  if (!element) {\n    return [];\n  }\n\n  const { children } = element;\n\n  if (!children.length) {\n    return children;\n  }\n\n  const childrenOfChildren = children.map(id => findAllChildIds(data, id));\n\n  return children.concat(...childrenOfChildren);\n}\n\nexport function omitChildById(obj: TElementRecord, key: TId): TElementRecord {\n  if (!obj[key]) {\n    return obj;\n  }\n\n  const allRemovedIds = [key].concat(findAllChildIds(obj, key));\n\n  return Object.values(obj).reduce<TElementRecord>((acc, element) => {\n    if (!isOneOfList(element.id, allRemovedIds)) {\n      acc[element.id] = {\n        ...element,\n        children: element.children.filter(\n          childId => !isOneOfList(childId, allRemovedIds)\n        ),\n      };\n    }\n    return acc;\n  }, {});\n}\n","import { TElement, TId, TElementData, TAttribute } from './types';\nimport { omitChildById } from './utils';\n\ntype State = TElementData;\n\ntype ActionElementAdd = {\n  type: 'element/add';\n  payload: {\n    parentId: null | TId;\n    element: TElement;\n  };\n};\ntype ActionElementEdit = { type: 'element/edit'; payload: TElement };\ntype ActionElementRemove = { type: 'element/remove'; payload: TId };\ntype ActionAttributeAdd = {\n  type: 'attribute/add';\n  payload: {\n    elementId: TId;\n    attribute: TAttribute;\n  };\n};\ntype ActionAttributeEdit = {\n  type: 'attribute/edit';\n  payload: {\n    elementId: TId;\n    attribute: TAttribute;\n  };\n};\ntype ActionAttributeRemove = {\n  type: 'attribute/remove';\n  payload: { attributeId: TId; elementId: TId };\n};\ntype Actions =\n  | ActionElementAdd\n  | ActionElementEdit\n  | ActionElementRemove\n  | ActionAttributeAdd\n  | ActionAttributeEdit\n  | ActionAttributeRemove;\n\nexport function elementReducer(state: State, action: Actions) {\n  switch (action.type) {\n    case 'element/add':\n      if (\n        action.payload.parentId !== null &&\n        action.payload.parentId in state.data\n      ) {\n        return {\n          ...state,\n          data: {\n            ...state.data,\n            [action.payload.parentId]: {\n              ...state.data[action.payload.parentId],\n              children: [\n                ...state.data[action.payload.parentId].children,\n                action.payload.element.id,\n              ],\n            },\n            [action.payload.element.id]: action.payload.element,\n          },\n        };\n      }\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.payload.element.id]: action.payload.element,\n        },\n        root: state.root.concat(action.payload.element.id),\n      };\n\n    case 'element/edit':\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.payload.id]: {\n            ...state.data[action.payload.id],\n            ...action.payload,\n          },\n        },\n      };\n\n    case 'element/remove':\n      return {\n        ...state,\n        data: omitChildById(state.data, action.payload),\n        root: state.root.filter(id => id !== action.payload),\n      };\n\n    case 'attribute/add':\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.payload.elementId]: {\n            ...state.data[action.payload.elementId],\n            attributes: [\n              ...state.data[action.payload.elementId].attributes,\n              action.payload.attribute,\n            ],\n          },\n        },\n      };\n\n    case 'attribute/edit':\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.payload.elementId]: {\n            ...state.data[action.payload.elementId],\n            attributes: state.data[action.payload.elementId].attributes.map(\n              attribute => {\n                if (attribute.id === action.payload.attribute.id) {\n                  return action.payload.attribute;\n                }\n                return attribute;\n              }\n            ),\n          },\n        },\n      };\n\n    case 'attribute/remove':\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.payload.elementId]: {\n            ...state.data[action.payload.elementId],\n            attributes: state.data[action.payload.elementId].attributes.filter(\n              ({ id }) => id !== action.payload.attributeId\n            ),\n          },\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n","import { TElementData } from './types';\n\nexport const elementsData: TElementData = {\n  data: {\n    el1: {\n      id: 'el1',\n      name: 'el1',\n      attributes: [\n        { id: 'attr1', name: 'attr1', value: 'value1' },\n        { id: 'attr2', name: 'attr2', value: 'value2' },\n      ],\n      children: ['el2'],\n    },\n    el2: {\n      id: 'el2',\n      name: 'el2',\n      attributes: [],\n      children: [],\n    },\n    el3: {\n      id: 'el3',\n      name: 'el3',\n      attributes: [],\n      children: ['el4'],\n    },\n    el4: {\n      id: 'el4',\n      name: 'el4',\n      attributes: [],\n      children: ['el5'],\n    },\n    el5: {\n      id: 'el5',\n      name: 'el5',\n      attributes: [{ id: 'attr1', name: 'attr1', value: 'value1' }],\n      children: [],\n    },\n  },\n  root: ['el1', 'el3'],\n};\n","import * as React from 'react';\nimport nanoid from 'nanoid';\nimport { TElement, TId } from './types';\nimport { elementReducer } from './reducer';\nimport { elementsData } from './mock-data';\n\nconst useElementReducer = () => React.useReducer(elementReducer, elementsData);\n\nconst StateContext = React.createContext<ReturnType<typeof useElementReducer>>([\n  elementsData,\n  () => {},\n]);\n\nexport const useElementState = () => React.useContext(StateContext)[0];\n\nexport const useElementById = (id: TId) => {\n  const { data } = useElementState();\n  return data[id];\n};\n\nexport const useElementActions = () => {\n  const [, dispatch] = React.useContext(StateContext);\n\n  const add = React.useCallback(\n    (payload: { parentId: null | TId; name: string }) =>\n      dispatch({\n        type: 'element/add',\n        payload: {\n          parentId: payload.parentId,\n          element: {\n            id: nanoid(),\n            name: payload.name,\n            attributes: [],\n            children: [],\n          },\n        },\n      }),\n    [dispatch]\n  );\n\n  const edit = React.useCallback(\n    (payload: TElement) => dispatch({ type: 'element/edit', payload }),\n    [dispatch]\n  );\n\n  const remove = React.useCallback(\n    (payload: TId) => dispatch({ type: 'element/remove', payload }),\n    [dispatch]\n  );\n\n  return { add, edit, remove };\n};\n\nexport const useAttributeActions = () => {\n  const [, dispatch] = React.useContext(StateContext);\n\n  const remove = React.useCallback(\n    (elementId: TId, attributeId: TId) =>\n      dispatch({\n        type: 'attribute/remove',\n        payload: { attributeId, elementId },\n      }),\n    [dispatch]\n  );\n\n  return { remove };\n};\n\nexport const ElementProvider: React.FC = ({ children }) => {\n  return (\n    <StateContext.Provider value={useElementReducer()}>\n      {children}\n    </StateContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport styles from './Button.module.css';\n\ntype Props = {\n  type?: 'button' | 'submit';\n  onClick?: (event: React.MouseEvent) => void;\n};\n\nexport const Button: React.FC<Props> = ({\n  children,\n  type = 'button',\n  onClick,\n}) => {\n  return (\n    <button className={styles.button} type={type} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './Modal.module.css';\n\ntype Props = {\n  show: boolean;\n  title: React.ReactNode;\n  onClose: () => void;\n};\n\nexport const Modal: React.FC<Props> = ({ children, show, title, onClose }) => {\n  if (!show) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(\n    <div className={styles.modal}>\n      <div className={styles.shadow} />\n      <div className={styles.dialog}>\n        <h2 className={styles.title}>{title}</h2>\n        <button className={styles.close} type=\"button\" onClick={onClose} />\n        {children}\n      </div>\n    </div>,\n    document.body\n  );\n};\n","import * as React from 'react';\nimport styles from './Input.module.css';\n\ntype Props = {\n  name: string;\n  placeholder: string;\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  required: boolean;\n  pattern: string;\n  autoFocus?: boolean;\n};\n\nexport const Input: React.FC<Props> = ({\n  name,\n  placeholder,\n  value,\n  onChange,\n  required,\n  pattern,\n  autoFocus,\n}) => {\n  return (\n    <input\n      className={styles.input}\n      name={name}\n      placeholder={placeholder}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      required={required}\n      pattern={pattern}\n      autoFocus={autoFocus}\n    />\n  );\n};\n","import * as React from 'react';\nimport styles from './FormRow.module.css';\n\ntype Props = {\n  label: React.ReactNode;\n};\n\nexport const FormRow: React.FC<Props> = ({ children, label }) => {\n  return (\n    <label className={styles.label}>\n      {label}\n      {children}\n    </label>\n  );\n};\n","import * as React from 'react';\nimport cn from 'classnames/bind';\nimport styles from './InputGroup.module.css';\n\nconst cx = cn.bind(styles);\n\ntype Props = {\n  align?: 'center' | 'between';\n};\n\nexport const InputGroup: React.FC<Props> = ({\n  children,\n  align = 'between',\n}) => {\n  return <div className={cx('input-group', `align-${align}`)}>{children}</div>;\n};\n","import * as React from 'react';\nimport { Input } from '../../ui/Input';\nimport { FormRow } from '../../ui/FormRow';\nimport { InputGroup } from '../../ui/InputGroup';\n\ntype Props = {\n  onChange: (name: string) => void;\n  value: string;\n  autoFocus?: boolean;\n};\n\nexport const NameFormControl: React.FC<Props> = ({\n  onChange,\n  value,\n  autoFocus,\n}) => {\n  return (\n    <FormRow label=\"Name:\">\n      <InputGroup>\n        <Input\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n          required\n          pattern=\"[a-zA-Z][a-zA-Z0-9]+\"\n          autoFocus={autoFocus}\n        />\n      </InputGroup>\n    </FormRow>\n  );\n};\n","import * as React from 'react';\nimport { Button } from '../../ui/Button';\nimport { useElementActions } from '../element-core//ElementContext';\nimport { NameFormControl } from './NameFormControl';\nimport { TId } from '../element-core/types';\n\ntype Props = {\n  id?: TId;\n  onClose: () => void;\n};\n\nexport const AddElementForm: React.FC<Props> = ({ id, onClose }) => {\n  const { add } = useElementActions();\n  const [name, setName] = React.useState('');\n  const onSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    const trimmedName = name.trim();\n    if (trimmedName) {\n      add({ parentId: id || null, name: trimmedName });\n      onClose();\n    }\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <NameFormControl onChange={setName} value={name} autoFocus />\n      <Button type=\"submit\">Create</Button>\n    </form>\n  );\n};\n","import * as React from 'react';\nimport { Button } from '../../ui/Button';\nimport { Modal } from '../../ui/Modal';\nimport { AddElementForm } from './AddElementForm';\n\nexport const AddElementModal: React.FC = () => {\n  const [show, setShow] = React.useState(false);\n  const close = React.useCallback(() => setShow(false), []);\n  const open = React.useCallback(() => setShow(true), []);\n\n  return (\n    <>\n      <Button onClick={open}>Create element</Button>\n      <Modal show={show} title=\"Create element\" onClose={close}>\n        <AddElementForm onClose={close} />\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport styles from './ButtonIcon.module.css';\n\ntype Props = {\n  name: string;\n  type?: 'button' | 'submit';\n  onClick?: (event: React.MouseEvent) => void;\n};\n\nexport const ButtonIcon: React.FC<Props> = ({\n  name,\n  type = 'button',\n  onClick,\n}) => {\n  return (\n    <button className={styles.button} type={type} onClick={onClick}>\n      <i className={`fa fa-${name}`} />\n    </button>\n  );\n};\n","import * as React from 'react';\nimport styles from './Tag.module.css';\n\ntype TagProps = {\n  closed?: boolean;\n  selfClosed?: boolean;\n};\n\nexport const Tag: React.FC<TagProps> = ({ children, closed, selfClosed }) => (\n  <span className={styles.tag}>\n    {'<'}\n    {closed && '/'}\n    {children}\n    {selfClosed && ' /'}\n    {'>'}\n  </span>\n);\n\ntype AttributeProps = {\n  name: string;\n  value: string;\n};\n\nexport const Attribute: React.FC<AttributeProps> = ({ name, value }) => (\n  <span className={styles.attribute}>\n    {' '}\n    {name}=\"<span className={styles.value}>{value}</span>\"\n  </span>\n);\n","import * as React from 'react';\nimport { ButtonIcon } from '../../ui/ButtonIcon';\nimport { Modal } from '../../ui/Modal';\nimport { AddElementForm } from './AddElementForm';\nimport { TId } from '../element-core/types';\n\ntype Props = {\n  id: TId;\n  name: TId;\n};\n\nexport const AddChildElementModal: React.FC<Props> = ({ id, name }) => {\n  const [show, setShow] = React.useState(false);\n  const close = React.useCallback(() => setShow(false), []);\n  const open = React.useCallback(() => setShow(true), []);\n\n  return (\n    <>\n      <ButtonIcon name=\"plus\" onClick={open} />\n      <Modal\n        show={show}\n        title={`Create child for element ${name}`}\n        onClose={close}\n      >\n        <AddElementForm id={id} onClose={close} />\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Input } from '../../ui/Input';\nimport { FormRow } from '../../ui/FormRow';\nimport { Button } from '../../ui/Button';\nimport { InputGroup } from '../../ui/InputGroup';\n\ntype Props = {\n  onChange: (name: string, value: string) => void;\n  onDelete: (name: string) => void;\n  name: string;\n  value: string;\n};\n\nexport const AttributeFormControl: React.FC<Props> = ({\n  onChange,\n  onDelete,\n  value,\n  name,\n}) => {\n  return (\n    <FormRow label={`Attribute ${name}:`}>\n      <InputGroup>\n        <Input\n          name={`attribute_${name}`}\n          placeholder=\"Enter attribute value\"\n          value={value}\n          onChange={e => onChange(name, e.target.value)}\n          required\n          pattern=\"[a-zA-Z0-9]+\"\n        />\n        <Button onClick={() => onDelete(name)}>Delete</Button>\n      </InputGroup>\n    </FormRow>\n  );\n};\n","import * as React from 'react';\nimport { Input } from '../../ui/Input';\nimport { FormRow } from '../../ui/FormRow';\nimport { InputGroup } from '../../ui/InputGroup';\n\ntype Props = {\n  onChange: (name: string) => void;\n  value: string;\n  autoFocus?: boolean;\n};\n\nexport const ValueFormControl: React.FC<Props> = ({\n  onChange,\n  value,\n  autoFocus,\n}) => {\n  return (\n    <FormRow label=\"Value:\">\n      <InputGroup>\n        <Input\n          name=\"value\"\n          placeholder=\"Enter value\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n          required\n          pattern=\"[a-zA-Z0-9]+\"\n          autoFocus={autoFocus}\n        />\n      </InputGroup>\n    </FormRow>\n  );\n};\n","import * as React from 'react';\nimport nanoid from 'nanoid';\nimport { Button } from '../../ui/Button';\nimport { InputGroup } from '../../ui/InputGroup';\nimport { NameFormControl } from './NameFormControl';\nimport { ValueFormControl } from './ValueFormControl';\nimport { TAttributeList, TAttribute } from '../element-core/types';\n\ntype Props = {\n  attributes: TAttributeList;\n  onSubmit: (attribute: TAttribute) => void;\n  onClose: () => void;\n};\n\nexport const AddAttributeForm: React.FC<Props> = ({\n  attributes,\n  onSubmit,\n  onClose,\n}) => {\n  const [name, setName] = React.useState('');\n  const [value, setValue] = React.useState('');\n\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const trimmedName = name.trim();\n    const trimmedValue = value.trim();\n\n    if (\n      trimmedName &&\n      trimmedValue &&\n      !attributes.some(attribute => attribute.name === name)\n    ) {\n      onSubmit({ id: nanoid(), name, value });\n      onClose();\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <NameFormControl value={name} onChange={setName} autoFocus />\n      <ValueFormControl value={value} onChange={setValue} />\n      <InputGroup align=\"between\">\n        <Button type=\"submit\">Add</Button>\n        <Button onClick={onClose}>Cancel</Button>\n      </InputGroup>\n    </form>\n  );\n};\n","import * as React from 'react';\nimport { Button } from '../../ui/Button';\nimport { Modal } from '../../ui/Modal';\nimport { AddAttributeForm } from './AddAttributeForm';\nimport { TAttributeList, TAttribute } from '../element-core/types';\n\ntype Props = {\n  name: string;\n  attributes: TAttributeList;\n  onSubmit: (attribute: TAttribute) => void;\n};\n\nexport const AddAttributeModal: React.FC<Props> = ({\n  name,\n  attributes,\n  onSubmit,\n}) => {\n  const [show, setShow] = React.useState(false);\n  const close = React.useCallback(() => setShow(false), []);\n  const open = React.useCallback(() => setShow(true), []);\n\n  return (\n    <>\n      <Button onClick={open}>Add attribute</Button>\n      <Modal show={show} title={`Add attribute - ${name}`} onClose={close}>\n        <AddAttributeForm\n          attributes={attributes}\n          onSubmit={onSubmit}\n          onClose={close}\n        />\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Button } from '../../ui/Button';\nimport { InputGroup } from '../../ui/InputGroup';\nimport {\n  useElementActions,\n  useElementById,\n} from '../element-core/ElementContext';\nimport { NameFormControl } from './NameFormControl';\nimport { TId, TAttribute } from '../element-core/types';\nimport { AttributeFormControl } from './AttributeFormControl';\nimport { AddAttributeModal } from './AddAttributeModal';\n\ntype Props = {\n  id: TId;\n  onClose: () => void;\n};\n\nexport const EditElementForm: React.FC<Props> = ({ id, onClose }) => {\n  const element = useElementById(id);\n  const { edit } = useElementActions();\n  const [name, setName] = React.useState(element.name);\n  const [attributes, setAttributes] = React.useState(element.attributes);\n\n  const onAttributeValueChange = (name: string, value: string) => {\n    setAttributes(\n      attributes.map(attribute =>\n        name === attribute.name ? { ...attribute, value: value } : attribute\n      )\n    );\n  };\n  const onAttributeAdd = (attribute: TAttribute) => {\n    setAttributes(attributes.concat(attribute));\n  };\n  const onAttributeDelete = (name: string) => {\n    setAttributes(attributes.filter(attribute => name !== attribute.name));\n  };\n  const onSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const trimmedName = name.trim();\n    if (trimmedName) {\n      edit({ ...element, attributes, name: trimmedName });\n      onClose();\n    }\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <NameFormControl onChange={setName} value={name} autoFocus />\n      {attributes.map((attribute, index) => (\n        <AttributeFormControl\n          key={index}\n          name={attribute.name}\n          value={attribute.value}\n          onChange={onAttributeValueChange}\n          onDelete={onAttributeDelete}\n        />\n      ))}\n      <InputGroup align=\"center\">\n        <AddAttributeModal\n          attributes={attributes}\n          name={name}\n          onSubmit={onAttributeAdd}\n        />\n      </InputGroup>\n      <Button type=\"submit\">Save</Button>\n    </form>\n  );\n};\n","import * as React from 'react';\nimport { ButtonIcon } from '../../ui/ButtonIcon';\nimport { Modal } from '../../ui/Modal';\nimport { EditElementForm } from './EditElementForm';\nimport { TId } from '../element-core/types';\n\ntype Props = {\n  id: TId;\n  name: string;\n};\n\nexport const EditElementModal: React.FC<Props> = ({ id, name }) => {\n  const [show, setShow] = React.useState(false);\n  const close = React.useCallback(() => setShow(false), []);\n  const open = React.useCallback(() => setShow(true), []);\n\n  return (\n    <>\n      <ButtonIcon name=\"pen\" onClick={open} />\n      <Modal show={show} title={`Edit element - ${name}`} onClose={close}>\n        <EditElementForm id={id} onClose={close} />\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { ButtonIcon } from '../../ui/ButtonIcon';\nimport { Tag, Attribute } from '../../ui/Tag';\nimport { TElement } from '../element-core/types';\nimport { AddChildElementModal } from '../element-form/AddChildElementModal';\nimport { EditElementModal } from '../element-form/EditElementModal';\nimport styles from './ElementItem.module.css';\n\ntype Props = {\n  data: TElement;\n  onRemove: () => void;\n};\n\nexport const ElementItem: React.FC<Props> = ({ children, data, onRemove }) => {\n  const [open, setOpen] = React.useState(true);\n  const onToggle = React.useCallback(() => setOpen(!open), [open, setOpen]);\n\n  const { id, name, attributes } = data;\n  const showOpen = open && children;\n\n  return (\n    <span className={styles.element}>\n      <span className={styles.target}>\n        {children && (\n          <ButtonIcon\n            name={open ? 'caret-down' : 'caret-right'}\n            onClick={onToggle}\n          />\n        )}\n        <Tag selfClosed={!showOpen}>\n          {name}\n          {attributes.map(({ id, name, value }) => (\n            <Attribute key={id} name={name} value={value} />\n          ))}\n        </Tag>\n        <span className={styles.buttons}>\n          <AddChildElementModal id={id} name={name} />\n          <EditElementModal id={id} name={name} />\n          <ButtonIcon name=\"trash\" onClick={onRemove} />\n        </span>\n      </span>\n      {showOpen && (\n        <>\n          {children}\n          <Tag closed>{name}</Tag>\n        </>\n      )}\n    </span>\n  );\n};\n","import * as React from 'react';\nimport { TIdList, TId } from '../element-core/types';\nimport {\n  useElementActions,\n  useElementById,\n} from '../element-core/ElementContext';\nimport { ElementItem } from './ElementItem';\nimport styles from './ElementList.module.css';\n\ntype ElementListProps = {\n  list: TIdList;\n};\n\nexport const ElementList: React.FC<ElementListProps> = ({ list }) => {\n  return (\n    <ul className={styles.list}>\n      {list.map(id => (\n        <li key={id}>\n          <ElementListItem id={id} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\ntype ElementListItemProps = {\n  id: TId;\n};\n\nexport const ElementListItem: React.FC<ElementListItemProps> = ({ id }) => {\n  const element = useElementById(id);\n  const { remove } = useElementActions();\n  const onRemove = React.useCallback(() => remove(id), [remove, id]);\n\n  return (\n    <ElementItem data={element} onRemove={onRemove}>\n      {element.children.length > 0 && <ElementList list={element.children} />}\n    </ElementItem>\n  );\n};\n","import * as React from 'react';\nimport { useElementState } from '../element-core/ElementContext';\nimport { ElementList } from './ElementList';\n\nexport const ElementListThree: React.FC = () => {\n  const { root } = useElementState();\n\n  return <ElementList list={root} />;\n};\n","import * as React from 'react';\nimport cn from 'classnames';\nimport styles from './Json.module.css';\n\nexport const JsonBlock: React.FC<{ name?: React.ReactNode }> = ({\n  children,\n  name,\n}) => (\n  <span className={cn(styles.block, styles.comma)}>\n    {name && <JsonKey>{name}</JsonKey>}\n    {children}\n  </span>\n);\n\nexport const JsonBlockPadded: React.FC = ({ children }) => (\n  <span className={cn(styles.block, styles.padded)}>{children}</span>\n);\n\nexport const JsonKey: React.FC = ({ children }) => <span>\"{children}\": </span>;\n\nexport const JsonString: React.FC = ({ children }) => (\n  <span className={styles.string}>\"{children}\"</span>\n);\n\nexport const JsonArray: React.FC = ({ children }) => (\n  <span className={styles.comma}>\n    <span>[</span>\n    {children && <JsonBlockPadded>{children}</JsonBlockPadded>}\n    <span>]</span>\n  </span>\n);\n\nexport const JsonObject: React.FC = ({ children }) => (\n  <span className={styles.comma}>\n    <span>{'{'}</span>\n    {children && <JsonBlockPadded>{children}</JsonBlockPadded>}\n    <span>{'}'}</span>\n  </span>\n);\n","import * as React from 'react';\nimport { ButtonIcon } from '../../ui/ButtonIcon';\nimport { TElement } from '../element-core/types';\nimport { AddChildElementModal } from '../element-form/AddChildElementModal';\nimport { EditElementModal } from '../element-form/EditElementModal';\nimport styles from './ElementItem.module.css';\nimport {\n  JsonKey,\n  JsonString,\n  JsonObject,\n  JsonArray,\n  JsonBlock,\n} from '../../ui/Json';\n\ntype Props = {\n  data: TElement;\n  onRemove: () => void;\n};\n\nexport const ElementItem: React.FC<Props> = ({ children, data, onRemove }) => {\n  const { id, name, attributes } = data;\n\n  return (\n    <JsonBlock>\n      <span className={styles.element}>\n        <JsonObject>\n          <span className={styles.target}>\n            <JsonKey>id</JsonKey>\n            <JsonString>{id}</JsonString>,\n            <span className={styles.buttons}>\n              <AddChildElementModal id={id} name={name} />\n              <EditElementModal id={id} name={name} />\n              <ButtonIcon name=\"trash\" onClick={onRemove} />\n            </span>\n            <JsonBlock name=\"name\">\n              <JsonString>{name}</JsonString>\n            </JsonBlock>\n            <JsonBlock name=\"attributes\">\n              <JsonArray>\n                {attributes.length > 0 &&\n                  attributes.map(({ id, name, value }) => (\n                    <JsonBlock key={id}>\n                      <JsonObject>\n                        <JsonBlock name=\"id\">\n                          <JsonString>{id}</JsonString>\n                        </JsonBlock>\n                        <JsonBlock name=\"name\">\n                          <JsonString>{name}</JsonString>\n                        </JsonBlock>\n                        <JsonBlock name=\"value\">\n                          <JsonString>{value}</JsonString>\n                        </JsonBlock>\n                      </JsonObject>\n                    </JsonBlock>\n                  ))}\n              </JsonArray>\n              ,\n            </JsonBlock>\n          </span>\n          <JsonBlock name=\"children\">\n            <JsonArray>{children}</JsonArray>\n          </JsonBlock>\n        </JsonObject>\n      </span>\n    </JsonBlock>\n  );\n};\n","import * as React from 'react';\nimport { TIdList, TId } from '../element-core/types';\nimport {\n  useElementActions,\n  useElementById,\n} from '../element-core/ElementContext';\nimport { ElementItem } from './ElementItem';\n\ntype ElementListProps = {\n  list: TIdList;\n};\n\nexport const ElementList: React.FC<ElementListProps> = ({ list }) => {\n  return (\n    <>\n      {list.map(id => (\n        <ElementListItem key={id} id={id} />\n      ))}\n    </>\n  );\n};\n\ntype ElementListItemProps = {\n  id: TId;\n};\n\nexport const ElementListItem: React.FC<ElementListItemProps> = ({ id }) => {\n  const element = useElementById(id);\n  const { remove } = useElementActions();\n  const onRemove = React.useCallback(() => remove(id), [remove, id]);\n\n  return (\n    <ElementItem data={element} onRemove={onRemove}>\n      {element.children.length > 0 && <ElementList list={element.children} />}\n    </ElementItem>\n  );\n};\n","import * as React from 'react';\nimport { useElementState } from '../element-core/ElementContext';\nimport { ElementList } from './ElementList';\nimport { JsonArray, JsonBlock } from '../../ui/Json';\n\nexport const ElementListJson: React.FC = () => {\n  const { root } = useElementState();\n\n  return (\n    <JsonBlock>\n      <JsonArray>{root.length > 0 && <ElementList list={root} />}</JsonArray>\n    </JsonBlock>\n  );\n};\n","import * as React from 'react';\nimport { ElementListThree } from '../element-three/ElementListThree';\nimport { ElementListJson } from '../element-json/ElementListJson';\nimport { Button } from '../../ui/Button';\n\nexport const ElementViewSwitcher: React.FC = () => {\n  const [view, setView] = React.useState(true);\n  const toggleView = React.useCallback(() => setView(!view), [view, setView]);\n  return (\n    <>\n      <Button onClick={toggleView}>Change view</Button>\n      {view ? <ElementListThree /> : <ElementListJson />}\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import * as React from 'react';\nimport { ElementProvider } from '../features/element-core/ElementContext';\nimport { AddElementModal } from '../features/element-form/AddElementModal';\nimport { ElementViewSwitcher } from '../features/element-view-switcher/ElementSwitcher';\n\nexport const App: React.FC = () => (\n  <ElementProvider>\n    <AddElementModal />\n    <ElementViewSwitcher />\n  </ElementProvider>\n);\n"],"sourceRoot":""}